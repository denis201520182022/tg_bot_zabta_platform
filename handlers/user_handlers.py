# handlers/user_handlers.py

import logging
import re
from aiogram import Router, Bot
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram import types
import phonenumbers

from database.requests import add_user, get_user
from bot_commands import set_user_commands
from config import ADMIN_IDS
from handlers.admin_handlers import admin_keyboard

# –°–æ–∑–¥–∞–µ–º –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π –ª–æ–≥–≥–µ—Ä –¥–ª—è —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞
logger = logging.getLogger(__name__)

router = Router()

class Registration(StatesGroup):
    waiting_for_phone_number = State()

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help —Å –∫—Ä–∞—Å–∏–≤—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º ---
@router.message(Command("help"))
async def cmd_help(message: types.Message):
    user_id = message.from_user.id
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if user_id in ADMIN_IDS:
        logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø—Ä–∞–≤–∫—É.")
        admin_help_text = (
            "<b>‚öôÔ∏è –°–ø—Ä–∞–≤–∫–∞ –¥–ª—è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>\n\n"
            "–í—ã –≤–æ—à–ª–∏ –≤ —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º:\n\n"
            "<b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:</b>\n"
            "  <code>üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</code>\n"
            "  <i>–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∏—Ö –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏ Telegram ID.</i>\n\n"
            "  <code>üìé –ù–∞–∑–Ω–∞—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ</code>\n"
            "  <i>–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ—à–∞–≥–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏–≤—è–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (bot_id, api_key, trunk_id) –∫ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –≠—Ç–∞ —Å–≤—è–∑–∫–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –∫–ª–∏–µ–Ω—Ç.</i>\n\n"
            "<b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞–º–∏:</b>\n"
            "  <code>üìÑ –ü–æ–∫–∞–∑–∞—Ç—å —à–∞–±–ª–æ–Ω</code>\n"
            "  <i>–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π —à–∞–±–ª–æ–Ω, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.</i>\n\n"
            "  <code>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω</code>\n"
            "  <i>–ü–æ–∑–≤–æ–ª—è–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è HTML-—Ç–µ–≥–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.</i>\n\n"
            "<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
            "  /start –∏–ª–∏ /admin - <i>–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.</i>\n"
            "  /help - <i>–ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É.</i>"
        )
        await message.answer(admin_help_text, parse_mode="HTML")
    else:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø—Ä–∞–≤–∫—É.")
        user_help_text = (
            "<b>‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º</b>\n\n"
            "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö —Ä–∞–±–æ—Ç—ã –≤–∞—à–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ä–æ–±–æ—Ç–∞.\n\n"
            "<b>–ö–∞–∫ –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è?</b>\n"
            "1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.\n"
            "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ <code>+7XXXXXXXXXX</code>.\n"
            "3. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –±—É–¥–µ—Ç –ø—Ä–∏–≤—è–∑–∞—Ç—å –∫ –≤–∞—à–µ–º—É –Ω–æ–º–µ—Ä—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –±–æ—Ç–∞.\n\n"
            "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—Å—ë –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ, –≤—ã –Ω–∞—á–Ω—ë—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞—Ç—å –æ—Ç—á–µ—Ç—ã –æ –∑–≤–æ–Ω–∫–∞—Ö.\n\n"
            "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
            "  /start - <i>–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞.</i>\n"
            "  /help - <i>–ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É.</i>"
        )
        await message.answer(user_help_text, parse_mode="HTML")


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
@router.message(CommandStart())
async def cmd_start(message: types.Message, state: FSMContext, bot: Bot):
    user_id = message.from_user.id
    await set_user_commands(bot, user_id)
    await state.clear()

    if user_id in ADMIN_IDS:
        logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞.")
        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∏–∂–µ –∏–ª–∏ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º.",
            reply_markup=admin_keyboard()
        )
        return

    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞.")
    user = await get_user(user_id)
    if user:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —Å –Ω–æ–º–µ—Ä–æ–º {user.phone_number}.")
        await message.answer(f"–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã —Å –Ω–æ–º–µ—Ä–æ–º {user.phone_number}.")
        return

    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
    await message.answer(
        "–î–æ–±—Ä—ã–π –¥–µ–Ω—å. –£–∫–∞–∂–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX, "
        "—á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–∞–±–æ—Ç–µ –í–∞—à–µ–≥–æ –±–æ—Ç–∞."
    )
    await state.set_state(Registration.waiting_for_phone_number)


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
@router.message(Registration.waiting_for_phone_number)
async def process_phone_number(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    phone_number = message.text
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤–≤–µ–ª –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: '{phone_number}'")

    try:
        cleaned_phone = re.sub(r'[^\d+]', '', phone_number)
        parsed_phone = phonenumbers.parse(cleaned_phone, "RU")
        if not phonenumbers.is_valid_number(parsed_phone) or parsed_phone.country_code != 7:
            raise ValueError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–æ—Å—Å–∏–π—Å–∫–∏–π –Ω–æ–º–µ—Ä")
            
        normalized_phone = phonenumbers.format_number(
            parsed_phone, phonenumbers.PhoneNumberFormat.E164
        )
        
        logger.debug(f"–ù–æ–º–µ—Ä {phone_number} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω –≤ {normalized_phone}")
        result = await add_user(user_id, normalized_phone)

        if result == "ok":
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —Å –Ω–æ–º–µ—Ä–æ–º {normalized_phone}.")
            await message.answer(
                f"–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã —Å –Ω–æ–º–µ—Ä–æ–º {normalized_phone}.\n"
                "–û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–≤–æ–Ω–∫–∞—Ö."
            )
            await state.clear()
        elif result == "user_exists":
            logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–∂–µ –±—ã–ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. (–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–∞ —ç—Ç–∞–ø–µ –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞)")
            await message.answer("–í—ã —É–∂–µ –±—ã–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
            await state.clear()
        elif result == "phone_exists":
            logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –Ω–æ–º–µ—Ä {normalized_phone}.")
            await message.answer("–≠—Ç–æ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
        
    except Exception as e:
        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤–≤–µ–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä '{phone_number}'. –û—à–∏–±–∫–∞: {e}")
        await message.answer(
            "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –ü—Ä–∏–º–µ—Ä: +79123456789"
        )